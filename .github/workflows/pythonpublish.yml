# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [created]

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*

  deploy_conda:
    needs:
      deploy

    runs-on: ubuntu-latest

    steps:
    - name: Deploy to Conda Cloud
      run: |
        sleep 5m
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
        bash miniconda.sh -b -p $HOME/miniconda
        export PATH="$HOME/miniconda/bin:$PATH"
        conda install conda-build
        conda install anaconda-client
        conda install numpy
        conda config --add channels conda-forge
        conda config --set channel_priority strict
        conda skeleton pypi easyvvuq
        sed -i 's/dask_jobqueue/dask-jobqueue/g' easyvvuq/meta.yaml
        sed -i '/^build:/a\
          noarch: python' easyvvuq/meta.yaml
        sed -i '/^    - kubernetes/a\
            - python-kubernetes' easyvvuq/meta.yaml
        yes | anaconda login --username ${{ secrets.CONDA_USERNAME }} --password ${{ secrets.CONDA_PASSWORD }}
        conda config --set anaconda_upload yes
        conda build easyvvuq
        anaconda logout
